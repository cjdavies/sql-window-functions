Solution - Aggregate window functions

First, I'll find the number of annual vaccinations. This is a simple query grouped by year using a count star to aggregate the number of vaccinations. I don't need anything else from the table. Only the years that had vaccinations and their vaccination count. I always like to have the results of the previous step in front of me as I'm working on the next one. That's why after every CTE, I add a select star from it and comment it out as I go. I often find that I need to go back to previous ones for debugging. I'm now ready to calculate the average for the previous two years. I'm going to break the solution to multiple steps, probably more than necessary, but just to make it easier to follow and to avoid needing to repeat long expressions. I also use highly descriptive long aliases even if it makes the query longer. Remember, you can always go back and compact it. I'll use the previous CTE as my input and add an average aggregate window function over the number of vaccinations calculated above. Be careful with a partition window and frame. Here, I don't need to partition since we already have one row per year. What I do need is a frame that covers the two proceeding years, order by year, range between two proceeding and one proceeding. What do you think will happen if we use rows instead of a range frame? Pause the video for a minute and think about it. For this dataset, there will be no difference. It contains consecutive rows for each year, but if I add a filter just to check it and remove 2018, using a range frame shows the average of the two previous years for 2019 as 23. This is the correct result. 2018, no longer exists and the frame extends only two years back therefore, we get 2017. With a rows frame, the average shows 17. And this is the average of the years 2016 and 2017, the two rows, not the two years that proceed 2019. And that of course is not the correct answer. All that is left is to calculate the change in percent, 100 multiplied by the number of vaccinations of the current year divided by the average of the past two years. The cast to decimal prevents the results from having way too many digits, in this case, it's just for a better presentation, but for some of the next challenges, it will have a more substantial impact so remember it. And with that, our first solution is done.