Review, conclusion, and next steps

And so here we are, at the end of our short but intense journey. I can't believe we started it just two hours ago. Our first step was an introduction to the general concepts of Window Functions and the OVER Clause. We learned about partitioning, Framing subtleties, and frame Exclusions. Then, we covered the three types of Window Functions in-depth. We saw how Aggregate Window Functions differ from group aggregate functions, the one you know and love, and how both can live together in harmony. I bet that the Rank and Distribution Functions blew the minds of the analysts among you. For you developers, I promise that you will learn to appreciate how useful they are for solving numerous types of challenges as you get comfortable with them, and the same is true for Offset Window Functions. They too, have numerous use cases and will come in handy no matter what type of obligations you're working on. If you haven't watched my query processing course yet, it's not too late. After completing this course, it will be easier to follow, and will help put some of the more basic SQL constructs into an even tighter framework. Window functions are your friends, and one of your most valuable tools no matter where you're heading with your SQL career. If you like this course, please bookmark my author page, and check it occasionally to see when I publish new ones. I promise to make good use of window functions to solve all kinds of nifty challenges, and there's no shortage of good challenges. LinkedIn Learning is an endless resource of quality content. With so many options, choosing the right course to spend your valuable time watching isn't a simple task. I recommend that you choose courses that focus on foundational knowledge, theory, and understanding of the subject matter, rather than ones that focus on syntax and promise instant results. Don't get me wrong, there's nothing immoral about learning how to get your hands dirty fast, but only as a starting point. Unfortunately, I often see developers stuck at the Stack Overflow copy paste paradigm for the rest of their SQL careers. Don't be tempted by instant solutions, not for SQL, and not in your life. The instant culture has been thriving in recent decades, and that's really not a good thing. If you're serious about your SQL career, I recommend that you bite the bullet, and spend whatever time and effort is needed to master the relational data model, SQL's forefather. It is not an easy subject, and that's an understatement. On the other hand, I can't overstate the importance of understanding the foundations on which SQL was built. Do that, and you will stand out from the crowd of script kiddies. You see, even in this Adobe stock image we purchased for this course, every single table has a table name underscore ID as its primary key. You will know better than that once you learn what a key really represents in the relational model, and I promise you it will blow your mind once you get to know it. Dr. Codd was a rare genius. Make sure you read his book and his articles. I'll provide links to some of my favorite resources in the code file for this chapter. I really need your feedback to improve. Did this course meet your expectations? Was there any part where you wished for more? Any topics you found boring or trivial? Were the challenges too hard or too easy? Do you disagree with something I said and feel the urge to correct me? All feedback is fair game, and I invite you to rank this course honestly. And even better, I will highly appreciate it if you could spend a few minutes and provide more detailed feedback than just a like or a like or a DENSE_RANK. Use the Q and A section to leave feedback and ask questions. You're also very welcome to look me up on LinkedIn and connect, but if you do, please add a personal message to your connection request. Our human brains work in mysterious ways. They're complex neural networks, and learning triggers new pathways and memories. These pathways are volatile, and without practice they will soon fade away. Studies have shown that in one hour, you will forget about 50% of what you remember now, 70% will be gone tomorrow, and 90% in a week. To make sure your effort and time were not in vain, you must do four things, practice, practice, practice, and keep learning more SQL. So, to keep you busy with some more practice, I created one last challenge as homework. It's an extra difficult one for triple bonus points. You'll find the challenge and the solution files, as usual, in the folder for this chapter. And I'm not going to review neither the requirements nor the solution. I did leave detailed comments and descriptive aliases, and I really hope that's enough. I will tell you that it took me over two and a half hours to solve it and weed out all my bugs. So, be patient and careful. I hope you'll enjoy it, and find a better solution than mine, and if you do, let me know in the Q and A section what you think and how you solved it. And on that positive note, it is time to say goodbye. Thank you, from the bottom of my heart, for your patients and making it all thew way to this point. I couldn't have done it without you.